/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package form;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.event.MouseEvent;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.border.Border;
import javax.swing.border.CompoundBorder;
import javax.swing.border.EmptyBorder;
import javax.swing.plaf.basic.BasicSplitPaneDivider;
import javax.swing.plaf.basic.BasicSplitPaneUI;
import org.jdesktop.swingx.JXCollapsiblePane;

/**
 *
 * @author zcmgyu
 */
public final class PanelAnnounce extends javax.swing.JPanel {

    /**
     * Creates new form AnnouncePanel
     */
    public PanelAnnounce() {
        initComponents();
        initTitle();
        initCompoundBorder();
        editSliptPane();
        initSwitchPane();
    }
    CompoundBorder compoundBorder;
    CompoundBorder compoundBorder2;

    void initCompoundBorder() {
        //        splitPane.setBorder(BorderFactory.createEmptyBorder(2, 2, 2, 2));
        Border line = BorderFactory.createLineBorder(Color.lightGray, 2);
        Border empty = new EmptyBorder(10, 10, 10, 10);
        Border empty2 = new EmptyBorder(0, 10, 0, 10);
        compoundBorder = new CompoundBorder(line, empty);
        compoundBorder2 = new CompoundBorder(line, empty2);
        leftList.setBorder(compoundBorder);
        RightContent.setBorder(compoundBorder);
        txtContent.setBorder(compoundBorder);
        txtTitle.setBorder(compoundBorder2);

    }
    JXCollapsiblePane cp;

    void initSwitchPane() {
        cp = new JXCollapsiblePane();
        cp.setLayout(new BorderLayout());
        cp.setCollapsed(true);
        cp.add("Center", TopHidden);
        add("North", cp);
        btnSwitchToEditor.addActionListener(cp.getActionMap().get(JXCollapsiblePane.TOGGLE_ACTION));
    }

    void editSliptPane() {
        BasicSplitPaneUI flatDividerSplitPaneUI = new BasicSplitPaneUI() {
            @Override
            public BasicSplitPaneDivider createDefaultDivider() {
                return new BasicSplitPaneDivider(this) {
                    @Override
                    public void setBorder(Border b) {
                    }
                };
            }
        };
        splitPane.setDividerLocation(400);
        splitPane.setUI(flatDividerSplitPaneUI);
        splitPane.setBorder(null);
        splitPane.setLastDividerLocation(600);
    }

    // http://stackoverflow.com/questions/12799640/why-does-jsplitpane-add-a-border-to-my-components-and-how-do-i-stop-it
    

    final void initTitle() {
        String sql = "select * from tblAnnounce order by ID Desc";
        // ### Nhớ chỉnh lại JList thành JList<AnnounceModal> trong phần Properties >>> Code
        DefaultListModel<ModalAnnounce> dlm = new DefaultListModel<>();
        try (Connection cn = Tools.getConn();
                Statement st = cn.createStatement();
                ResultSet rs = st.executeQuery(sql);) {
            while (rs.next()) {
                ModalAnnounce am = new ModalAnnounce(rs.getInt(1), rs.getString(2), rs.getString(3));
                dlm.addElement(am);
            }
            leftList.setModel(dlm);
            if(selectedIndex >= 0) {
                leftList.setSelectedIndex(selectedIndex);
            }
        } catch (SQLException ex) {
            Logger.getLogger(PanelAnnounce.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        TopHidden = new javax.swing.JPanel();
        txtTitle = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtContent = new javax.swing.JTextPane();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        TopHiddenSendButton = new org.jdesktop.swingx.JXButton();
        popupEditDel = new javax.swing.JPopupMenu();
        edit = new javax.swing.JMenuItem();
        delete = new javax.swing.JMenuItem();
        add = new javax.swing.JMenuItem();
        TopShow = new javax.swing.JPanel();
        splitPane = new javax.swing.JSplitPane();
        scpLeft = new javax.swing.JScrollPane();
        leftList = new javax.swing.JList<>();
        scpRight = new javax.swing.JScrollPane();
        RightContent = new javax.swing.JTextPane();
        Bottom = new javax.swing.JPanel();
        btnSwitchToEditor = new org.jdesktop.swingx.JXButton();

        TopHidden.setBackground(new java.awt.Color(255, 255, 255));

        txtTitle.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        txtTitle.setBorder(null);

        jScrollPane3.setBorder(null);

        txtContent.setBorder(null);
        txtContent.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jScrollPane3.setViewportView(txtContent);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("Tiêu đề");

        jLabel2.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        jLabel2.setText("Nội dung thông báo");

        TopHiddenSendButton.setBackground(new java.awt.Color(255, 255, 255));
        TopHiddenSendButton.setBorder(null);
        TopHiddenSendButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/send.png"))); // NOI18N
        TopHiddenSendButton.setToolTipText("Gửi");
        TopHiddenSendButton.setFocusPainted(false);
        TopHiddenSendButton.setOpaque(false);
        TopHiddenSendButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TopHiddenSendButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout TopHiddenLayout = new javax.swing.GroupLayout(TopHidden);
        TopHidden.setLayout(TopHiddenLayout);
        TopHiddenLayout.setHorizontalGroup(
            TopHiddenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TopHiddenLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(TopHiddenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3)
                    .addComponent(txtTitle, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(TopHiddenLayout.createSequentialGroup()
                        .addGroup(TopHiddenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(0, 573, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TopHiddenLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(TopHiddenSendButton, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        TopHiddenLayout.setVerticalGroup(
            TopHiddenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TopHiddenLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 227, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(TopHiddenSendButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        popupEditDel.setBackground(new java.awt.Color(255, 255, 255));
        popupEditDel.setBorderPainted(false);
        popupEditDel.setLabel("");

        edit.setText("Chỉnh sửa");
        edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editActionPerformed(evt);
            }
        });
        popupEditDel.add(edit);

        delete.setText("Xóa thông báo");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });
        popupEditDel.add(delete);

        add.setText("Đăng thông báo");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });
        popupEditDel.add(add);

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new java.awt.BorderLayout());

        TopShow.setBackground(new java.awt.Color(255, 255, 255));

        splitPane.setBorder(null);
        splitPane.setOpaque(false);
        splitPane.setPreferredSize(new java.awt.Dimension(200, 23));

        scpLeft.setBorder(null);
        scpLeft.setName(""); // NOI18N

        leftList.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        leftList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                leftListMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                leftListMouseReleased(evt);
            }
        });
        leftList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                leftListValueChanged(evt);
            }
        });
        scpLeft.setViewportView(leftList);

        splitPane.setLeftComponent(scpLeft);

        scpRight.setBorder(null);

        RightContent.setEditable(false);
        RightContent.setBorder(null);
        scpRight.setViewportView(RightContent);

        splitPane.setRightComponent(scpRight);

        javax.swing.GroupLayout TopShowLayout = new javax.swing.GroupLayout(TopShow);
        TopShow.setLayout(TopShowLayout);
        TopShowLayout.setHorizontalGroup(
            TopShowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TopShowLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(splitPane, javax.swing.GroupLayout.DEFAULT_SIZE, 711, Short.MAX_VALUE)
                .addContainerGap())
        );
        TopShowLayout.setVerticalGroup(
            TopShowLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TopShowLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(splitPane, javax.swing.GroupLayout.DEFAULT_SIZE, 311, Short.MAX_VALUE)
                .addContainerGap())
        );

        add(TopShow, java.awt.BorderLayout.CENTER);

        Bottom.setPreferredSize(new java.awt.Dimension(731, 50));

        btnSwitchToEditor.setBackground(new java.awt.Color(102, 102, 255));
        btnSwitchToEditor.setBorder(null);
        btnSwitchToEditor.setText("Đăng thông báo");
        btnSwitchToEditor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSwitchToEditorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout BottomLayout = new javax.swing.GroupLayout(Bottom);
        Bottom.setLayout(BottomLayout);
        BottomLayout.setHorizontalGroup(
            BottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnSwitchToEditor, javax.swing.GroupLayout.DEFAULT_SIZE, 731, Short.MAX_VALUE)
        );
        BottomLayout.setVerticalGroup(
            BottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnSwitchToEditor, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
        );

        add(Bottom, java.awt.BorderLayout.PAGE_END);
    }// </editor-fold>//GEN-END:initComponents

    private void leftListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_leftListValueChanged
        ModalAnnounce am = leftList.getSelectedValue();
        if(am == null) {
            return;
        }
        RightContent.setText(am.getContent());
    }//GEN-LAST:event_leftListValueChanged

    private void TopHiddenSendButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TopHiddenSendButtonActionPerformed
        
        String sql = "INSERT INTO tblAnnounce\n"
                   + "VALUES (N'" + txtTitle.getText().trim()+ "', N'" + txtContent.getText() + "');";
        DefaultListModel<ModalAnnounce> dlm = new DefaultListModel<>();
        try (Connection cn = Tools.getConn();
                Statement st = cn.createStatement();
            ) 
            {
                int update = st.executeUpdate(sql);
                if (update > 0) {
                    JOptionPane.showMessageDialog(this, "Đã thêm 1 thông báo mới");
                    txtTitle.setText("");
                    txtContent.setText("");
                    ShareData.getInstance().getPa().initTitle();
                }
                
        } catch (SQLException ex) {
            Logger.getLogger(PanelAnnounce.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_TopHiddenSendButtonActionPerformed

    public void check(MouseEvent evt) {
        if (evt.isPopupTrigger()) { //if the event shows the menu
//            leftList.setSelectedIndex(leftList.locationToIndex(evt.getPoint())); //select the item
            popupEditDel.show(leftList, evt.getX(), evt.getY()); //and show the menu
        }
    }
    // Dùng 2 cái vì gì đó trên Stack bảo vậy
    private void leftListMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_leftListMousePressed
        // Để lấy thông tin giá trị vừa kick chuột phải
        amSend = leftList.getSelectedValue();
        check(evt);
    }//GEN-LAST:event_leftListMousePressed
    ModalAnnounce amSend;
    ArrayList<ModalAnnounce> multiAM;
    
    private void leftListMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_leftListMouseReleased
        amSend = leftList.getSelectedValue();
        multiAM = (ArrayList<ModalAnnounce>) leftList.getSelectedValuesList();
        check(evt);
    }//GEN-LAST:event_leftListMouseReleased

    int selectedIndex = -1;
    private void editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editActionPerformed
        selectedIndex = leftList.getSelectedIndex();
        DialogEditAnnouce ep = new DialogEditAnnouce(null, true, amSend);
        ep.setLocationRelativeTo(this);
        ep.setVisible(true);
    }//GEN-LAST:event_editActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        List<ModalAnnounce> list = leftList.getSelectedValuesList();
        delete(list);
        ShareData.getInstance().getPa().initTitle();

    }//GEN-LAST:event_deleteActionPerformed

    boolean delete(List<ModalAnnounce> list) {
        StringBuilder sql = new StringBuilder("DELETE tblAnnounce WHERE [ID] in (");
        for (ModalAnnounce am : list) {
            sql.append(am.getID()).append(",");
        }
        sql.deleteCharAt(sql.length() - 1);
        sql.append(")");
        try (
            Connection cn = Tools.getConn();
            Statement st = cn.createStatement();            
        ) {
            int rows = st.executeUpdate(sql.toString());
            if(rows > 0) {
                
                return  true;
            } else {
                return false;
            }
        } catch (SQLException ex) {
            Logger.getLogger(PanelAnnounce.class.getName()).log(Level.SEVERE, null, ex);
            return false;
        }
    }
    
    
    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
//        btnSwitchToEditorActionPerformed(evt);
    }//GEN-LAST:event_addActionPerformed

    private void btnSwitchToEditorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSwitchToEditorActionPerformed
        if (!cp.isCollapsed()) {
            TopHidden.setPreferredSize(TopShow.getSize());
            btnSwitchToEditor.setText("Xem tin tức");
        } else {
            btnSwitchToEditor.setText("Đăng thông báo");
        }

    }//GEN-LAST:event_btnSwitchToEditorActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Bottom;
    private javax.swing.JTextPane RightContent;
    private javax.swing.JPanel TopHidden;
    private org.jdesktop.swingx.JXButton TopHiddenSendButton;
    private javax.swing.JPanel TopShow;
    private javax.swing.JMenuItem add;
    private org.jdesktop.swingx.JXButton btnSwitchToEditor;
    private javax.swing.JMenuItem delete;
    private javax.swing.JMenuItem edit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JList<ModalAnnounce> leftList;
    private javax.swing.JPopupMenu popupEditDel;
    private javax.swing.JScrollPane scpLeft;
    private javax.swing.JScrollPane scpRight;
    private javax.swing.JSplitPane splitPane;
    private javax.swing.JTextPane txtContent;
    private javax.swing.JTextField txtTitle;
    // End of variables declaration//GEN-END:variables
}
